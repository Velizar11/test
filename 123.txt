git init //Для обозначения папки репозитория
git remote add origin -git_HTPPS- //Для открытия репазиторя
git clone -git_HTPPS- //Для клонирования репозиторя
git add . //Для добовления файлов / индексация файлов и вместо . пишется * если добовлять все файлы на комит кандидат
git commit -m 'u_massage' //Для комита
git push --set-upstream origin master //Для входа(доступа) в мастер ветку репозитория
git push //Для отправления файлов в репозиторий на GitHub
git status //Для проверки статуса 
gitk //Дополнительная удобная утелита

--------------------------------------------------------------------------------------------------------------------------

Порядок действий:
git add .
git commit -m ''
git status
git push

--------------------------------------------------------------------------------------------------------------------------

Вы можете очень легко автоматизировать это, используя сценарии Bash.

git add .

echo 'Enter the commit message:'
read commitMessage

git commit -m "$commitMessage"

echo 'Enter the name of the branch:'
read branch

git push origin $branch

read
сохраните приведенный выше код в виде .shфайла (скажем gitpush.sh)

И так как вы должны сделать этот файл sh исполняемым, вам нужно один раз запустить в терминале следующую команду:

chmod +x gitpush.sh
А теперь запустите этот .sh файл.

Каждый раз, когда вы запускаете его, он будет запрашивать у вас сообщение фиксации и имя ветки.
Если ветка не существует или место назначения не определено,
git выдаст ошибку. ЧТОБЫ прочитать эту ошибку, я добавил последнее read утверждение.
Если ошибок нет, то git генерирует pushed successfully сообщение типа.

---------------------------------------------------------------------------------------------------------------------------

https://github.com/Velizar11/newVeliz.git
